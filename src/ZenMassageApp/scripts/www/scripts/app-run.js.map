{"version":3,"file":"app-run.js","sourceRoot":"","sources":["../../app/app-run.ts"],"names":[],"mappings":"AAAC,IAAO,aAAa,CAkFpB;AAlFA,WAAO,aAAa,EAAC,CAAC;IACnB,YAAY,CAAC;IAOb;QAEI,4BACY,UAAgC,EAChC,OAA0B,EAC1B,QAA2B,EAC3B,WAAyB,EACzB,cAA+B;YAP/C,iBA2DC;YAxDe,eAAU,GAAV,UAAU,CAAsB;YAChC,YAAO,GAAP,OAAO,CAAmB;YAC1B,aAAQ,GAAR,QAAQ,CAAmB;YAC3B,gBAAW,GAAX,WAAW,CAAc;YACzB,mBAAc,GAAd,cAAc,CAAiB;YAEvC,OAAO,CAAC,MAAM,GAAG;gBACb,KAAI,CAAC,UAAU,EAAE,CAAC;YACtB,CAAC,CAAC;YAEF,0BAA0B;YAC1B,WAAW,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;YACrC,WAAW,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC;YAEjD,gDAAgD;YAChD,UAAU,CAAC,GAAG,CAAC,mBAAmB,EAAE,cAAc,CAAC,CAAC,CAAC;QACzD,CAAC;QAED,uCAAU,GAAV;YAAA,iBAEC;YADG,QAAQ,CAAC,gBAAgB,CAAC,aAAa,EAAE,cAAa,KAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QAC1F,CAAC;QAED,0CAAa,GAAb;YAAA,iBAwBC;YAvBG,6CAA6C;YAC7C,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,cAAa,KAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;YAC1E,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,EAAE,cAAc,KAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;YAE7E,wFAAwF;YACxF,IAAI,MAAM,GAAY,OAAO,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;YAC/D,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,KAAK,IAAI,CAAC,CAAC,CAAC;gBAEnD,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,MAAM,CAAC;gBAEpC,MAAM,CAAC,UAAU,CACb,sCAAsC,EACtC,UAAC,IAAI;oBACD,SAAS,CAAC,YAAY,CAAC,KAAK,CACxB,kBAAkB,EAClB,cAAc,CAAC,CAAC,CAAC;gBACzB,CAAC,EACD,UAAC,KAAK;oBACF,SAAS,CAAC,YAAY,CAAC,KAAK,CACxB,sBAAsB,EACtB,cAAc,CAAC,CAAC,CAAC;gBACzB,CAAC,CAAC,CAAC;YACX,CAAC;QACL,CAAC;QAED,oCAAO,GAAP;YACI,0EAA0E;QAC9E,CAAC;QAED,qCAAQ,GAAR;YACI,+EAA+E;QACnF,CAAC;QAEL,yBAAC;IAAD,CAAC,AA3DD,IA2DC;IAGD,kBAAkB,CAAC,OAAO,GAAG,CAAC,YAAY,EAAE,SAAS,EAAE,UAAU,EAAE,aAAa,EAAE,gBAAgB,CAAC,CAAC;IACpG,OAAO;SACF,MAAM,CAAC,KAAK,CAAC;SACb,GAAG,CAAC,UACD,UAAgC,EAChC,OAA0B,EAC1B,QAA2B,EAC3B,WAAyB,EACzB,cAA+B;QAE/B,MAAM,CAAC,IAAI,kBAAkB,CAAC,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,cAAc,CAAC,CAAC;IAC9F,CAAC,CAAC,CAAC;AACX,CAAC,EAlFO,aAAa,KAAb,aAAa,QAkFpB","sourcesContent":["ï»¿module ZenMassageApp {\r\n    'use strict';\r\n\r\n    interface IAppCookieService extends ng.cookies.ICookiesService {\r\n        userId: string;\r\n        pebbleUserId: string;\r\n    }\r\n\r\n    class ApplicationStartup {\r\n\r\n        constructor(\r\n            private $rootScope: ng.IRootScopeService,\r\n            private $window: ng.IWindowService,\r\n            private $cookies: IAppCookieService,\r\n            private currentUser: ICurrentUser,\r\n            private pebbleServices: IPebbleServices) {\r\n\r\n            $window.onload = (): void => {\r\n                this.initialize();\r\n            };\r\n\r\n            // Setup global user state\r\n            currentUser.userId = $cookies.userId;\r\n            currentUser.pebbleUserId = $cookies.pebbleUserId;\r\n        \r\n            // Placeholder for detecting route change errors\r\n            $rootScope.$on('$routeChangeError', (): void => { });\r\n        }\r\n\r\n        initialize(): void {\r\n            document.addEventListener('deviceready', (): void=> { this.onDeviceReady(); }, false);\r\n        }\r\n\r\n        onDeviceReady(): void {\r\n            // Handle the Cordova pause and resume events\r\n            document.addEventListener('pause', (): void=> { this.onPause(); }, false);\r\n            document.addEventListener('resume', (): void => { this.onResume(); }, false);\r\n\r\n            // TODO: Cordova has been loaded. Perform any initialization that requires Cordova here.\r\n            var pebble: IPebble = cordova.require('cordova-pebble.Pebble');\r\n            if (typeof pebble !== 'undefined' && pebble !== null) {\r\n\r\n                this.pebbleServices.pebble = pebble;\r\n\r\n                pebble.setAppUUID(\r\n                    '29207e29-1f35-4f89-9871-0a579e84d105',\r\n                    (info): void => {\r\n                        navigator.notification.alert(\r\n                            'watch app linked',\r\n                            (): void => { });\r\n                    },\r\n                    (error): void => {\r\n                        navigator.notification.alert(\r\n                            'watch app not linked',\r\n                            (): void => { });\r\n                    });\r\n            }\r\n        }\r\n\r\n        onPause(): void {\r\n            // TODO: This application has been suspended. Save application state here.\r\n        }\r\n\r\n        onResume(): void {\r\n            // TODO: This application has been reactivated. Restore application state here.\r\n        }\r\n\r\n    }\r\n\r\n\r\n    ApplicationStartup.$inject = ['$rootScope', '$window', '$cookies', 'currentUser', 'pebbleServices'];\r\n    angular\r\n        .module('app')\r\n        .run((\r\n            $rootScope: ng.IRootScopeService,\r\n            $window: ng.IWindowService,\r\n            $cookies: IAppCookieService,\r\n            currentUser: ICurrentUser,\r\n            pebbleServices: IPebbleServices) => {\r\n\r\n            return new ApplicationStartup($rootScope, $window, $cookies, currentUser, pebbleServices);\r\n        });\r\n}\r\n"]}